package alltestngkeywords;

import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;

import org.testng.annotations.BeforeClass;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;

public class ZkDemo extends LaunchingBrowser {
	public LaunchingBrowser lb;
	public WebDriver driver;
	public WebDriverWait wait;

  @Test(description="Verifying Buttons Test ")
  public void verifyButtons() throws InterruptedException {
	 Reporter.log("Click on Button link"); 
	  driver.findElement(By.linkText("Button")).click();
	 String title="ZK Live Demo - Button";
	 Assert.assertEquals(title, driver.getTitle());
	 List<WebElement>allButtons=driver.findElements(By.className("z-button"));
	  for(WebElement eachButton:allButtons) {
		  //print all buttons text
		  Reporter.log("Each button text"+eachButton.getText());
		 // Thread.sleep(5000);
	  }
  }
  @Test(description="Verifying CheckBoxes Test ")
  public void verifyCheckBoxes() throws InterruptedException{
	  Reporter.log("Click on Checkbox link");
	  driver.findElement(By.linkText("Checkbox")).click();
	  Reporter.log("verifying page title");
	  String title="ZK Live Demo - Checkbox";
	  Assert.assertEquals(title, driver.getTitle());
	 List<WebElement>allCheckBoxes=driver.findElements(By.xpath("//input[@type='checkbox']"));
	  Reporter.log("Check boxes size is "+allCheckBoxes.size());
	  for(WebElement eachEcheckBox:allCheckBoxes) {
		  if(!eachEcheckBox.isSelected()) {
			  eachEcheckBox.click();
		  }
	  }
	 Reporter.log("Successfully click on checkboxes");
	 String selCheckBoxes=driver.findElement(By.xpath("(//span[contains(text(),'You have selected')]/following::div/span)[1]")).getText();
	 Reporter.log("Clicking check boxes"+selCheckBoxes);
	 

	 
  }
  
  
  
  
  @BeforeMethod
  public void laungingUrl() {
	 Reporter.log("Launcinh the url using get()");
	  driver.get("https://www.zkoss.org/zkdemo/input");
	  String title="ZK Live Demo - Input";
	  //Explecitly wait
	  wait.until(ExpectedConditions.titleContains(title));
	 
	  Reporter.log("verifying page Title");
	  Assert.assertEquals(title, driver.getTitle());//(ExpectedrResult, ActualResult)
  }

  @AfterMethod
  public void afterMethod() {
	  Reporter.log("Excecuting afterMethod()");
	  driver.manage().deleteAllCookies();
  }


  
  @BeforeClass
  public void launchBrowser() {
	  
	  Reporter.log("Launching the browser only");
	  WebDriverManager.chromedriver().setup();
	  driver=new ChromeDriver();
	  driver.manage().window().maximize();
	  driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5000));
	  wait=new WebDriverWait(driver,Duration.ofSeconds(5000));
  }

  @AfterClass
  public void afterClass() {
	  
	  driver.close();
  }

}
